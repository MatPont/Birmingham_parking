library("ARI")
install.packages("ARI", dependencies = TRUE)
install.packages("ari", dependencies = TRUE)
lambdas <- c("10000.0", "1000.0", "100.0", "10.0", "1.0", "0.1", "0.01", "0.001", "0.0001", "1e-05", "0.0")
lambdas <- rev(lambdas)
cos_nmi <- c()
cos_ari <- c()
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
for(lambda in lambdas){
#file <- paste("result_wc_nmtf/lambda/cos/wc-nmtf_Z_l", lambda, ".csv", sep = "")
file <- paste("result_wc_nmtf/lambda/p_tra/wc-nmtf_Z_l", lambda, "_p_tra.csv", sep = "")
res_wc_nmtf <- read.csv(file, header = TRUE)
res_wc_nmtf <- t( normalize( t(res_wc_nmtf) ) )
label_res <- apply(res_wc_nmtf, MARGIN = 1, FUN=which.max)
t_nmi <- NMI(label_res, labelK)
t_ari <- ARI(label_res, labelK)
cos_nmi <- c(cos_nmi, t_nmi)
cos_ari <- c(cos_ari, t_ari)
}
temp = c(1:10)
matrix(c, nrow = 5)
matrix(temp, nrow = 5)
t <- Sys.time()
t2 <- Sys.time()
t2 - t
temp <- t2 - t
temp
plot(temp)
?dist
?svg
library(fulltext)
install.packages("fulltext", dependencies = TRUE)
plot(1:8)
install.packages("STRINGdb", dependencies = TRUE)
BiocManager::install(STRINGdb)
BiocManager::install("STRINGdb")
BiocManager::install("STRINGdb", update = TRUE)
BiocManager::install("STRINGdb", update = TRUE)
install.packages("BiocManager")
install.packages("BiocManager")
install.packages("BiocManager", dependencies = TRUE)
install.packages("BiocStyle", dependencies = TRUE)
STRINGdb::get_STRING_species()
BiocManager::install("STRINGdb")
library(STRINGdb)
sessionInfo()
plot_network("il4")
library(STRINGdb)
plot_network("il4")
library(FactoMineR)
library(shiny)
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Dynamic selectInput"),
dashboardSidebar(
sidebarMenu(
menuItemOutput("menuitem")
)
),
dashboardBody(
selectInput("heir1","Heirarchy1",c("NONE","A","B","C"),selected="NONE"),
selectInput("heir2","Heirarchy2",c("NONE","A","B","C"),selected="NONE"),
selectInput("heir3","Heirarchy3",c("NONE","A","B","C"),selected="NONE")
)
)
server <- function(input, output, session) {
output$menuitem <- renderMenu({
menuItem("Menu item", icon = icon("calendar"))
})
heirarchy<-c("A","B","C")
observe({
hei1<-input$heir1
hei2<-input$heir2
hei3<-input$heir3
choice1<-c("NONE",setdiff(heirarchy,c(hei2,hei3)))
choice2<-c("NONE",setdiff(heirarchy,c(hei1,hei3)))
choice3<-c("NONE",setdiff(heirarchy,c(hei1,hei2)))
updateSelectInput(session,"heir1",choices=choice1,selected=hei1)
updateSelectInput(session,"heir2",choices=choice2,selected=hei2)
updateSelectInput(session,"heir3",choices=choice3,selected=hei3)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Dynamic selectInput"),
dashboardSidebar(
sidebarMenu(
menuItemOutput("menuitem")
)
),
dashboardBody(
selectInput("heir1","Heirarchy1",c("NONE","A","B","C"),selected="NONE"),
selectInput("heir2","Heirarchy2",c("NONE","A","B","C"),selected="NONE"),
selectInput("heir3","Heirarchy3",c("NONE","A","B","C"),selected="NONE")
)
)
server <- function(input, output, session) {
output$menuitem <- renderMenu({
menuItem("Menu item", icon = icon("calendar"))
})
heirarchy<-c("A","B","C")
observe({
hei1<-input$heir1
hei2<-input$heir2
hei3<-input$heir3
choice1<-c("NONE",setdiff(heirarchy,c(hei2,hei3)))
choice2<-c("NONE",setdiff(heirarchy,c(hei1,hei3)))
choice3<-c("NONE",setdiff(heirarchy,c(hei1,hei2)))
updateSelectInput(session,"heir1",choices=choice1,selected=hei1)
updateSelectInput(session,"heir2",choices=choice2,selected=hei2)
updateSelectInput(session,"heir3",choices=choice3,selected=hei3)
})
}
shinyApp(ui, server)
diag(10)
?svd
svd(diag(10))
library(nbclust)
library(Nbclust)
library(NbClust)
install.packages(NbClust)
install.packages("NbClust", dependencies = TRUE)
library("NbClust")
library(class)
library(MASS)
library(kohonen)
install.packages("kohonen")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(kohonen)
source("util.R")
source("inertia.R")
week_data <- read.csv("../Datasets/week_dataset.csv", row.names = 1)
week_label <- read.csv("../Datasets/week_dataset_label.csv", row.names = 1)
norm_week_data <- norm_dataset(week_data)
chi_week_data <- norm_chi_2(norm_week_data)
res_som = som(chi_week_data, grid = somgrid(5, 5, "hexagonal"), rlen=1000)
size <- 10
set.seed(11)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 3, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "gold", "plum1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1","sandybrown","yellowgreen", "plum1", "gold")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 4, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
set.seed(7)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
set.seed(8)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "sandybrown")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1", "yellowgreen", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1", "springgreen", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "springgreen", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
set.seed(1)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "springgreen", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
plot(res_som, shape="straight", bgcol=c("steelblue1", "mediumspringgreen", "gold", "plum1", "darkslategray1")[label])
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 10
for(i in 1:50){
set.seed(i)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
readline()
}
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(kohonen)
source("util.R")
source("inertia.R")
week_data <- read.csv("../Datasets/week_dataset.csv", row.names = 1)
week_label <- read.csv("../Datasets/week_dataset_label.csv", row.names = 1)
norm_week_data <- norm_dataset(week_data)
chi_week_data <- norm_chi_2(norm_week_data)
size <- 10
for(i in 1:50){
print(i)
set.seed(i)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), 5, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
readline()
}
i<-8
k <- 4
print(i)
set.seed(i)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(kohonen)
source("util.R")
source("inertia.R")
print(i)
set.seed(i)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
i <- 11
set.seed(i)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 10
k <- 4
seed <- 8
set.seed(seed)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 11
set.seed(seed)
res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
plot(res_som, shape="straight", bgcol=c("steelblue1", "seagreen1", "gold", "plum1", "darkslategray1")[label])
add.cluster.boundaries(res_som, label, lwd = 3)
