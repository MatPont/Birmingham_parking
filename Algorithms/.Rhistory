color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
week_data <- read.csv("../Datasets/week_dataset.csv", row.names = 1)
week_label <- read.csv("../Datasets/week_dataset_label.csv", row.names = 1)
norm_week_data <- norm_dataset(week_data)
chi_week_data <- norm_chi_2(norm_week_data)
park_data <- read.csv("../Datasets/parking_dataset.csv", row.names = 1)
park_label <- read.csv("../Datasets/parking_dataset_label.csv", row.names = 1)
norm_park_data <- norm_dataset(park_data)
chi_park_data <- norm_chi_2(norm_park_data)
size <- 10
seed <- 11
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
k <- 3
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
size <- 10
seed <- 11
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
day_data <- read.csv("../Datasets/day_dataset.csv", row.names = 1)
day_label <- read.csv("../Datasets/day_dataset_label.csv", row.names = 1)
norm_day_data <- norm_dataset(day_data)
chi_day_data <- norm_chi_2(norm_day_data)
data <- norm_day_data
size <- 10
seed <- 11
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot(day_res_som, shape="straight")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
data <- chi_day_data
size <- 10
seed <- 11
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
data <- norm_day_data
size <- 10
seed <- 11
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
size <- 10
seed <- 11
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
size <- 10
seed <- 11
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
data <- chi_day_data
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
data <- norm_day_data
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
k <- 3
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
size <- 10
seed <- 11
set.seed(seed)
week_res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
set.seed(seed)
week_res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
week_res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
week_res_som = som(chi_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, chi_park_data, clus.dwt)
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
clus.dwt = KMedoids(data=norm_park_data, k=k, "wav")
data <- norm_day_data
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
#plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
#plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
k <- 3
clus.dwt = KMedoids(data=chi_park_data, k=k, "wav")
set.seed(seed)
week_res_som = som(norm_week_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot_som_temporal(week_res_som, norm_park_data, clus.dwt)
data <- norm_day_data
set.seed(seed)
day_res_som = som(as.matrix(data), grid = somgrid(size, size, "hexagonal"), rlen=1000)
#plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
size <- 4
k <- 3
seed <- 3
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
n <- 18
n_chi_park_data=t(apply(chi_park_data, 1, rollapply, n, mean, by = n))
n_norm_park_data=t(apply(norm_park_data, 1, rollapply, n, mean, by = n))
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
summary(as.factor(label))
7+4+3
length(label)
label
label <- convert_cluster(res_som$unit.classif, label)
summary(as.factor(label))
plot_charge_separate(n_norm_park_data, label, "Occupation normalisÃ©e")
dev.off()
#################################################
# Map
#################################################
read.csv("../Datasets/full_dataset.csv")
#################################################
# Map
#################################################
temp <- read.csv("../Datasets/full_dataset.csv")
temp
dim(tmep)
dim(temp)
#################################################
# Map
#################################################
coord <- read.csv("../Datasets/full_dataset.csv")[,c(1,15,16)]
coord
#################################################
# Map
#################################################
coord <- read.csv("../Datasets/full_dataset.csv")[,c(1,16)]
coord
coord[1,1]
coord[1,2]
typeof(coord[1,2])
coord[1,2][1]
coord[1,2]["coordinates"]
coord[1,2]["type"]
attributes(coord[1,2])
coord
park_names <- read.csv("../Datasets/parking_dataset_label.csv")
park_names
park_names <- read.csv("../Datasets/parking_dataset_label.csv")[,2]
park_names
for(park in park_names){
print(park)
}
t <- c()
t1 <- c(1,2)
t <- rbind(t, t1)
t
t1 <- c(1,3)
t <- rbind(t, t1)
t
for(park in park_names){
print(coord[coord[,1] == park,])
}
for(park in park_names){
print(jsonlite::fromJSON(coord[coord[,1] == park,]))
}
coord[1,2]
jsonlite::fromJSON(coord[1,2])
?jsonlite::fromJSON
jsonlite::toJSON(coord[1,2])
jsonlite::toJSON(coord[1,2])["coordinates"]
temp <- jsonlite::toJSON(coord[1,2])
typeof(temp)
temp
temp[1]
temp[2]
coord[1,2]
typeof(coord[1,2])
as.character(coord[1,2])
typeof(as.character(coord[1,2]))
as.character(coord[1,2])
jsonlite::toJSON(as.character(coord[1,2]))
jsonlite::fromJSON(as.character(coord[1,2]))
jsonlite::toJSON(as.character(coord[1,2]))$coordinates
jsonlite::toJSON(as.character(coord[1,2]))
jsonlite::fromJSON(as.character(coord[1,2]))
jsonlite::fromJSON(as.character(coord[1,2]))$coordinates
#################################################
# Map
#################################################
coord <- read.csv("../Datasets/full_dataset.csv")[,c(1,16)]
park_names <- read.csv("../Datasets/parking_dataset_label.csv")[,2]
temp <- c()
for(park in park_names){
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[1,2]))$coordinates)
}
temp
plot(temp)
temp <- c()
for(park in park_names){
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[coord[,1] == park,]))$coordinates)
}
#################################################
# Map
#################################################
coord <- read.csv("../Datasets/full_dataset.csv")[,c(1,16)]
park_names <- read.csv("../Datasets/parking_dataset_label.csv")[,2]
temp <- c()
for(park in park_names){
print(as.character(coord[coord[,1] == park,]))
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[coord[,1] == park,]))$coordinates)
}
temp <- c()
for(park in park_names){
print(coord[coord[,1] == park,])
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[coord[,1] == park,]))$coordinates)
}
temp <- c()
for(park in park_names){
print(as.character(coord[coord[,1] == park,2]))
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[coord[,1] == park,]))$coordinates)
}
temp <- c()
for(park in park_names){
print(as.character(coord[coord[,1] == park,2]))
temp <- rbind(temp, jsonlite::fromJSON(as.character(coord[coord[,1] == park, 2]))$coordinates)
}
tmep
temp
plot(temp)
temp <- c()
for(park in park_names){
coordinates <- jsonlite::fromJSON(as.character(coord[coord[,1] == park, 2]))$coordinates
if(coordinates[1] > -6)
temp <- rbind(temp, coordinates)
}
temp
plot(temp)
length(temp)
jsonlite::fromJSON(as.character(coord[1, 2]))$coordinates
rownames(jsonlite::fromJSON(as.character(coord[1, 2]))$coordinates)
jsonlite::fromJSON(as.character(coord[1, 2]))$coordinates
temp <- c()
for(park in park_names){
coordinates <- jsonlite::fromJSON(as.character(coord[coord[,1] == park, 2]))$coordinates
if(coordinates[1] > -6)
temp <- rbind(temp, coordinates)
rownames(temp)[dim(temp)[1]] <- park
}
temp
plot(temp)
plot(temp, rownames(temp))
plot(temp, label=rownames(temp))
plot(temp)
plot(temp)
text(temp, rownames(temp))
plot(temp)
plot(temp, pch = 19)
park_data <- read.csv("../Datasets/parking_dataset.csv", row.names = 1)
park_label <- read.csv("../Datasets/parking_dataset_label.csv", row.names = 1)
norm_park_data <- norm_dataset(park_data)
chi_park_data <- norm_chi_2(norm_park_data)
n <- 18
n_chi_park_data=t(apply(chi_park_data, 1, rollapply, n, mean, by = n))
n_norm_park_data=t(apply(norm_park_data, 1, rollapply, n, mean, by = n))
k <- 3
clus.dwt = KMedoids(data=n_chi_park_data, k=k, "wav")
clus.dwt
# Clustering
park_data <- read.csv("../Datasets/parking_dataset.csv", row.names = 1)
park_label <- read.csv("../Datasets/parking_dataset_label.csv", row.names = 1)
norm_park_data <- norm_dataset(park_data)
chi_park_data <- norm_chi_2(norm_park_data)
n <- 18
n_chi_park_data=t(apply(chi_park_data, 1, rollapply, n, mean, by = n))
k <- 3
clus.dwt = KMedoids(data=n_chi_park_data, k=k, "wav")
# Plot
plot(temp, pch = 19, col=clus.dwt)
park_names
temp
length(clus.dwt)
label <- c()
for(park_name in temp[,1]){
label <- c(label, clus.dwt[park_names == park_name])
}
label
clus.dwt
clus.dwt[park_names == "BHMNCPRAN01"]
label <- c()
for(park_name in temp[,1]){
lab <- clus.dwt[park_names == park_name]
print(lab)
label <- c(label, lab)
}
label <- c()
for(park_name in temp[,1]){
print(park_name)
lab <- clus.dwt[park_names == park_name]
print(lab)
label <- c(label, lab)
}
label <- c()
for(park_name in rownames(temp)){
print(park_name)
lab <- clus.dwt[park_names == park_name]
print(lab)
label <- c(label, lab)
}
# Plot
plot(temp, pch = 19, col=label)
install.packages("OpenStreetMap")
install.packages("OpenStreetMap", dependencies = T)
install.packages("rgdal", dependencies = T)
install.packages("rgdal", dependencies = T)
install.packages("rgdal", dependencies = T)
install.packages("rgdal", dependencies = T)
install.packages("OpenStreetMap")
library("OpenStreetMap")
autoplot()
OpenStreetMap::autoplot.OpenStreetMap(temp)
OpenStreetMap::autoplot.OpenStreetMap()
OpenStreetMap::autoplot.OpenStreetMap(c(53,-1))
?autoplot.OpenStreetMap
openmap(temp)
install.packages(osmr)
install.packages(osrm)
install.packages("osrm")
temp
map <-openmap(upperLeft = c(max(temp[,1]), min(temp[,2])), lowerRight = c(min(temp[,1]), max(temp[,2])), zoom=5, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = c(max(temp[,1]), min(temp[,2])), lowerRight = c(min(temp[,1]), max(temp[,2])))
autoplot.OpenStreetMap(map)
# Get coordinates
temp <- c()
for(park in park_names){
coordinates <- jsonlite::fromJSON(as.character(coord[coord[,1] == park, 2]))$coordinates
if(coordinates[1] > -6){
temp <- rbind(temp, c(coordinates[2], coordinates[1]))
rownames(temp)[dim(temp)[1]] <- park
}
}
temp
library("OpenStreetMap")
map <-openmap(upperLeft = c(max(temp[,1]), min(temp[,2])), lowerRight = c(min(temp[,1]), max(temp[,2])), zoom=5, type="osm")
autoplot.OpenStreetMap(map)
temp
?openmap
map <-openmap(upperLeft = c(min(temp[,1]), min(temp[,2])), lowerRight = c(max(temp[,1]), max(temp[,2])), zoom=5, type="osm")
autoplot.OpenStreetMap(map)
min(temp[,1]
)
max(temp[,1]
)
birmingham <- c(52.489471, -1.898575)
birmingham - 5
birmingham <- c(52.489471, -1.898575)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham-2, zoom=5, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham-1, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham-1, type="osm")
map <-openmap(upperLeft = birmingham-2, lowerRight = birmingham-2, zoom=5, type="osm")
map <-openmap(upperLeft = birmingham-2, lowerRight = birmingham-2, zoom=5, type="osm")
map <-openmap(upperLeft = birmingham-2, lowerRight = birmingham+2, zoom=5, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-2, lowerRight = birmingham+2, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=2)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=5)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=4)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=10)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
?openmap
types <- c("osm", "osm-bw","maptoolkit-topo", "waze", "bing", "stamen-toner", "stamen-terrain","stamen-watercolor", "osm-german", "osm-wanderreitkarte", "mapbox", "esri","esri-topo", "nps", "apple-iphoto", "skobbler", "hillshade", "opencyclemap","osm-transport", "osm-public-transport", "osm-bbike", "osm-bbike-german")
for(type in types){
print(type)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type=type, zoom=6)
autoplot.OpenStreetMap(map)
readline()
}
birmingham <- c(52.489471, -1.898575)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
types <- c("osm", "osm-bw","maptoolkit-topo", "waze", "bing", "stamen-toner", "stamen-terrain","stamen-watercolor", "osm-german", "osm-wanderreitkarte", "mapbox", "esri","esri-topo", "nps", "apple-iphoto", "skobbler", "hillshade", "opencyclemap","osm-transport", "osm-public-transport", "osm-bbike", "osm-bbike-german")
for(type in types){
print(type)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type=type, zoom=6)
autoplot.OpenStreetMap(map)
readline()
}
dev.off()
birmingham <- c(52.489471, -1.898575)
map <-openmap(upperLeft = birmingham-1, lowerRight = birmingham+1, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
plot(temp, pch = 19, col=label, xlim = c(birmingham[2]-1, birmingham[2]+1), ylim = c(birmingham[1]-1, birmingham[1]+1))
(temp, pch = 19, col=label)
# Plot
plot(temp, pch = 19, col=label)
# Plot
plot(t(temp), pch = 19, col=label)
t(temp)
# Plot
plot(temp[,2], temp[,1], pch = 19, col=label)
plot(temp, pch = 19, col=label, xlim = c(birmingham[2]-1, birmingham[2]+1), ylim = c(birmingham[1]-1, birmingham[1]+1))
# Plot
plot(temp[,2], temp[,1], pch = 19, col=label)
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-1, birmingham[2]+1), ylim = c(birmingham[1]-1, birmingham[1]+1))
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-0.5, birmingham[2]+0.5), ylim = c(birmingham[1]-1, birmingham[1]+1))
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
gap <- 0.1
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
gap <- 0.01
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
gap <- 0.02
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
gap <- 0.03
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
gap <- 0.02
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
layout(1:2)
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
layout(matrix(1:2, nrow=1))
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm", zoom=6)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm")
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm", zoom=7)
autoplot.OpenStreetMap(map)
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm", zoom=8)
autoplot.OpenStreetMap(map)
?openmap
map <-openmap(upperLeft = birmingham-gap, lowerRight = birmingham+gap, type="osm")
autoplot.OpenStreetMap(map)
plot(temp[,2], temp[,1], pch = 19, col=label, xlim = c(birmingham[2]-gap, birmingham[2]+gap), ylim = c(birmingham[1]-gap, birmingham[1]+gap))
