}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.4, end=0.9))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.5, end=0.9))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.5, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.6, end=1))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.65, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.8, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
?viridis
virids(5)
viridis(5)
viridis(5, option = "A")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0, option = "A")
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
data <- chi_day_data
size <- 10
seed <- 11
set.seed(seed)
day_res_som = som(data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot(day_res_som, shape="straight")
plot_som_temporal(day_res_som, chi_park_data, clus.dwt, mode="day")
data <- norm_day_data
size <- 10
seed <- 11
set.seed(seed)
day_res_som = som(data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
plot(day_res_som, shape="straight")
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0, end = 0.5)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0, start=0.5, end=0.95)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0, begin=0.5, end=0.95)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
viridis(5)
col2rgb(viridis(5))
t(col2rgb(viridis(5)))
t(col2rgb(viridis(5))) / 2
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
size_x <- res_som$grid$xdim
size_y <- res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
res_som = som(park_data[park_cluster == clusters[i], ], grid = somgrid(size_x, size_y, "hexagonal"), rlen=1000)
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
plot_som_temporal(day_res_som, norm_park_data, clus.dwt, mode="day")
plot_som_temporal <- function(res_som, park_data, park_cluster, mode="week"){
measure_per_day <- 18
measure_per_week <- measure_per_day * 7
num_week <- 11
num_day <- 77
grid_size <- res_som$grid$xdim * res_som$grid$ydim
clusters <- unique(park_cluster)
for(i in 1:length(clusters)){
res_som = som(park_data[park_cluster == clusters[i], ], grid = somgrid(7, 7, "hexagonal"), rlen=1000)
centroid <- colMeans(park_data[park_cluster == clusters[i], ])
#color <- t(replicate(grid_size, as.vector(col2rgb("gray88"))))
color <- t(col2rgb(rev(gray.colors(grid_size, start=0.85, end=0.95))))
if(mode == "week"){
cut <- seq(1, length(centroid)+1, measure_per_week)
num <- num_week
}
else if(mode == "day"){
cut <- seq(1, length(centroid)+1, measure_per_day)
num <- num_day
}
#col <- coolBlueHotRed(num)
col <- viridis(num, alpha=0)
for(i in 1:num){
cluster_vec <- t(as.matrix(centroid[cut[i]:(cut[i+1]-1)]))
pred <- predict(res_som, newdata=cluster_vec)
pred_unit <- pred$unit.classif
color[pred_unit,] <- as.vector(col2rgb(col[i]))
}
plot(res_som, shape="straight", bg=rgb(color/255))
#readline()
}
}
