if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 5
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 6
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 7
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 8
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 9
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
seed <- 11
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(TSdist)
library(TSclust)
library(cluster)
library(NbClust)
source("util.R")
source("data_cleaning.R")
source("inertia.R")
week_data <- read.csv("../Datasets/week_dataset.csv", row.names = 1)
week_label <- read.csv("../Datasets/week_dataset_label.csv", row.names = 1)
norm_week_data <- norm_dataset(week_data)
chi_week_data <- norm_chi_2(norm_week_data)
clus.dwt = KMedoids(data=chi_week_data, k=3, "wav")
plot_charge(norm_week_data, clus.dwt)
k <- 3
#clus.dwt = KMedoids(data=chi_week_data, k=k, "fourier")
clus.dwt = KMedoids(data=chi_week_data, k=k, "wav")
plot_charge(norm_week_data, clus.dwt)
dev.off()
k <- 3
#clus.dwt = KMedoids(data=chi_week_data, k=k, "fourier")
clus.dwt = KMedoids(data=chi_week_data, k=k, "wav")
#plot_charge(norm_week_data, clus.dwt)
layout(1:k)
plot_charge_separate(norm_week_data, clus.dwt)
library(mclust)
k <- 4
#clus.dwt = KMedoids(data=chi_week_data, k=k, "fourier")
clus.dwt = KMedoids(data=chi_week_data, k=k, "wav")
#plot_charge(norm_week_data, clus.dwt)
layout(1:k)
plot_charge_separate(norm_week_data, clus.dwt)
k <- 5
#clus.dwt = KMedoids(data=chi_week_data, k=k, "fourier")
clus.dwt = KMedoids(data=chi_week_data, k=k, "wav")
#plot_charge(norm_week_data, clus.dwt)
layout(1:k)
plot_charge_separate(norm_week_data, clus.dwt)
library(mclust)
#plot_charge(norm_week_data, clus.dwt)
layout(1:k)
plot_charge_separate(norm_week_data, clus.dwt)
size <- 3
k <- 3
seed <- 11
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 4
k <- 3
seed <- 11
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 7
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 8
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 5
k <- 3
seed <- 8
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 4
k <- 3
seed <- 8
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 3
k <- 3
seed <- 8
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 7
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 9
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 10
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 11
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 1
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 2
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 3
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(FactoMineR)
library(factoextra)
source("util.R")
source("data_cleaning.R")
data <- read.table("../Datasets/dataset.csv", sep=",", header = TRUE)
data <- data_cleaning(data)
park_names <- unique(data[,1])
week_data <- read.csv("../Datasets/week_dataset.csv", row.names = 1)
week_label <- read.csv("../Datasets/week_dataset_label.csv", row.names = 1)
day_data <- read.csv("../Datasets/day_dataset.csv", row.names = 1)
day_label <- read.csv("../Datasets/day_dataset_label.csv", row.names = 1)
park_data <- read.csv("../Datasets/parking_dataset.csv", row.names = 1)
park_label <- read.csv("../Datasets/parking_dataset_label.csv", row.names = 1)
########################################################
# Normalization
########################################################
norm_week_data <- norm_dataset(week_data)
norm_day_data <- norm_dataset(day_data)
norm_park_data <- norm_dataset(park_data)
chi_week_data <- norm_chi_2(norm_week_data)
chi_day_data <- norm_chi_2(norm_day_data)
chi_park_data <- norm_chi_2(norm_park_data)
names(numbers) <- names
par(mar=c(10,5,3,3)) # left margin space
names <- c()
numbers <- c()
for(i in unique(data[,1])){
print(i)
print(sum(data[,1] == i))
names <- c(names, i)
numbers <- c(numbers, sum(data[,1] == i))
}
names(numbers) <- names
par(mar=c(10,5,3,3)) # left margin space
barplot(numbers, las=2, col = ifelse(numbers < 1000, "red", "cadetblue2"))
data <- read.table("../Datasets/dataset.csv", sep=",", header = TRUE)
names <- c()
numbers <- c()
for(i in unique(data[,1])){
print(i)
print(sum(data[,1] == i))
names <- c(names, i)
numbers <- c(numbers, sum(data[,1] == i))
}
names(numbers) <- names
par(mar=c(10,5,3,3)) # left margin space
barplot(numbers, las=2, col = ifelse(numbers < 1000, "red", "cadetblue2"))
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
size <- 3
k <- 3
seed <- 3
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 4
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 10
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 11
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 12
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 13
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 14
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
label <- res_kmeans$cluster
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k)
dev.off()
seed <- 14
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 15
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 17
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 18
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 17
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, res_kmeans$cluster)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, label)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
size <- 3
k <- 3
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, label)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
k <- 4
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, label)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
k <- 3
seed <- 16
set.seed(seed)
res_som = som(n_chi_park_data, grid = somgrid(size, size, "hexagonal"), rlen=1000)
#res_kmeans <- kmeans(getCodes(res_som), k, nstart=50)
#label <- res_kmeans$cluster
label <- KMedoids(getCodes(res_som), k, distance = "wav")
dev.off()
plot(res_som, shape="straight", bgcol=MYCOLOR[label])
add.cluster.boundaries(res_som, label, lwd = 3)
dev.off()
if(k %% 2 == 0){  layout(matrix(1:k, nrow=2)) }else{  layout(1:k) }
label <- convert_cluster(res_som$unit.classif, label)
plot_charge_separate(n_norm_park_data, label, "Occupation normalisée")
